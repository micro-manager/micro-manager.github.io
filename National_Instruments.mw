== National Instruments ("NI100X") Adapter ==

<table><tr><td>
'''Summary:'''</td><td>Controls NI I/O boards through NI-DAQmx interface</td></tr>
<tr><td>'''Author:'''</td><td>Nenad Amodaj, 100X Imaging Inc</td></tr>
<tr><td>'''License:'''</td><td>LGPL License</td></tr> 
<tr><td>'''Platforms:'''</td><td>Windows only</td></tr>
</table>

This adapter provides digital and analog signal control for National Instruments cards. The version of the NI-DAQmx library used to build this adapter is 9.2. Most (or all) of the newer NI boards should be compatible. NI software (drivers) must be installed. LabView is not required.

Our NI adapter allows for two different "device types": digital and analog I/O.

=== Digital I/O ===

This device type is used to send binary digital signals. NI cards have one or more "ports" of digital lines, and each port contains one or more digital output lines. The easiest way to get a list of the ports you have on your card is to bring up NI-MAX, right-click on the card in the device list, and look at the pin diagram. You will also want to know the device name from NI-MAX (typically "Dev1", but if you have installed a previous NI card, then it may be "Dev2", etc., and devices can also be renamed in NI-MAX). 

When adding a DigitalIO device in the Hardware Configuration Wizard, you will need to provide the IOChannel property. This is the port that the device is allowed to send output to. If you have multiple ports on your card, then you will have to create a separate DigitalIO device for each port you want to control. As of 1.4.22, the wizard will automatically determine which ports are available and provide you with a dropdown menu. In prior versions, you will need to type in the name manually (try "Dev1/port0", for example). 

Once you have set up the device, you can manipulate the digital output signal by changing the "State" property. This is an unsigned 32-bit integer, with each bit corresponding to one of the output lines of the selected port (up to the limit of the number of lines in the port). So for example, if you have an 8-bit port, then the values of 0 through 255 (2^8 - 1) would be valid. Setting State to 1 would turn on the first line; setting it to 2 would turn on the second line; setting it to 3 would turn on the first two lines; et cetera. You can also set it to -1 to turn on all lines simultaneously. 

==== Hardware Triggering ==== 

As of version 1.4.22, the NI100x adapter supports hardware triggering for fast acquisitions, for certain NI cards only. In particular, it appears that none of their cheaper USB cards support such triggering, unfortunately. We have yet to figure out how to determine if a card supports triggering based solely on its spec sheet on NI's website.

There is a "TriggerSequenceLength" property that you can adjust in the Hardware Configuration Wizard. This is the maximum number of entries usable when using the card for hardware triggering. We expect that the default value of 1000 will be more than sufficient for all users, but it is available just in case. 

To enable hardware triggering, the card must support triggering, and you must tell it which input pin to "listen" on for the control signal, by setting the "TriggerInputLine" property. The device adapter will give you a list of valid input pins to listen on for this property. You should find a "PFI" pin that is ''not'' on the port that you want to use for output; certain of the pins on NI cards may do double-duty as both input and output pins, but they can only be used as one at a time. For example, if you want to use Dev1/port1 as your output port, and the Dev1/PFI0 input line is also the Dev1/port1/line0 output line, then you cannot use Dev1/PFI0 for hardware triggering. Refer to the pin diagram in NI-MAX to see which PFI inputs are valid for your setup.

Once you have set a valid input line, and assuming the card is capable of doing hardware triggering, the "SupportsTriggering" property should be set to 1. This indicates that the card is capable of performing hardware triggering. See [[Hardware-based_Synchronization_in_Micro-Manager]] for more information on setting up triggering with the rest of your system.

=== Analog I/O ===

TBD

=== Miscellaneous ===

Besides NI100X adapter this library contains a PI Z-stage driver that is internally linked to the analog output. For regular use of NI boards please disregard the Z-stage device and do not instantiate it in your setup even if you happen to have a PI stage attached. To use a PI stage refer to a standard PI adapter elsewhere in the micro-manager device list.

The only time that you would want to to use the PI stage driver from this library is for the 2-Photon microscope setup described in 
[http://biomicroscopy.ucsf.edu/mediawiki/index.php?title=Micromanager/2P BIDC 2P Microscopy]



{{Devices_Sidebar}}
