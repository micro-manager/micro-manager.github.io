== Olympus MT20 Illumination Device == 
<table><tr><td  valign=top >
<tr><td>'''Author:'''</td><td>Michael Mitchell</tr>
<tr><td>'''License:'''</td><td>LGPL</td></tr> 
<tr><td>'''Platforms:'''</td><td>Windows (Mac and Linux not yet tested)</td></tr>
<tr><td>'''Available in:'''</td><td>Micro-Manager 1.4 and later</td></tr>
</table>

----

The MT20 adapter communicates with the Olympus Real-Time Controller PCI card in the computer that came with the Cell^R/Scan^R/etc. system in order to control the MT20 itself. Therefore, to use the MT20 with this adapter, you need the Real-Time Controller installed in your computer. It is possible that you could transfer this card to another computer if you like, but I haven't tried this. In any case, the network settings for communication with the card should be the same as for the Olympus software (i.e., IP address 42.42.42.17, subnet mask 255.255.255.0). {{Note|Only one program can be connected to the MT20 controller at a time, so you can't operate the MT20 simultaneously using MicroManager and ObsConfig, Cell^R, or other Olympus software.}}

The adapter makes five devices visible in the Hardware Configuration Wizard: MT20-Hub, MT20-Burner, MT20-Shutter, MT20-Filterwheel, and MT20-Attenuator. The hub device is necessary to run any of the other devices, but you can select any/all of the other devices, as you desire. If you like, you can label the attenuator and filterwheel states in step 8 of the hardware configuration to correspond to the physical setup of your MT20.

After this, you can use all four devices (there should be no need to interact with the hub except to include it) normally in MicroManager. Whenever numbers are displayed rather than labels for the burner and shutter, 1 corresponds to on/open and 0 corresponds to off/closed. The MT20 is able to enter a standby mode. If it is in standby when MicroManager starts, the adapter will automatically bring it out of standby. I haven't implemented the ability to put the MT20 into standby in MicroManager since it didn't seem particularly useful, but if there is demand, this should be easy to do. {{Note|The adapter leaves all MT20 states unchanged when MicroManager exits, so the burner must be turned off manually if that is desired.}}

If any problems are encountered, basic error information should be visible in the core log. If more information is needed to diagnose the problem, you can run the MT20 using a dll compiled with MT20_DEBUG defined. This will cause it to create a file 'mt20_debug.txt' containing more information.

{{Devices_Sidebar}}
