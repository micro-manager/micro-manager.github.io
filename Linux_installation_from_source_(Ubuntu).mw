== Preparation ==

=== Install ImageJ ===

[http://rsb.info.nih.gov/ij/download.html Download the Linux version of ImageJ] from the NIH website.  From a terminal, unzip to <code>/usr/local/</code> and test that it runs:

{{MessageBox|1=Commandline|2=<pre>

cd ~/Downloads/
sudo unzip ij*-linux*.zip -d /usr/local/
cd /usr/local/ImageJ/
./run
</pre>}}

=== Other Required Programs and Libraries ===

You will need a subversion client to checkout the source code, several libraries, and build tools.  Install them with:

{{Note|Heavy editing in progress: some dependencies may be missing}}
{{MessageBox|1=Commandline|2=<pre>

sudo apt-get install subversion build-essential automake libtool \
                     libboost-all-dev zlib1g-dev swig sun-java6-sdk
</pre>}}

You may also need to install additional packages (for cameras and special hardware).  See the full list in [[#Dependencies]]

=== Source Repositories ===

Create a directory for the the subversion repositories, such as <code>~/mm</code>.  Besides the source tree, additional binary dependencies are stored in the <code>3rdpartypublic</code> repository.  The build scripts in the source tree assume <code>3rdpartypublic</code> is in the same parent folder level:

{{MessageBox|1=Commandline|2=<pre>

mkdir ~/mm
cd ~/mm
svn co https://valelab.ucsf.edu/svn/micromanager2/trunk/ micro-manager1.4
svn co https://valelab.ucsf.edu/svn/3rdpartypublic/
</pre>}}

This creates 2 new folders in the <code>mm</code> directory:
<pre>
    ~/mm/micro-manager1.4
    ~/mm/3rdpartypublic
</pre>

Add the Beanshell and SwingX to the ImageJ plugins directory:

{{MessageBox|1=Commandline|2=<pre>

cd ~/mm/3rdpartypublic/classext
sudo cp bsh-2.0b4.jar swingx-0.9.5.jar /usr/local/ImageJ/plugins/
</pre>}}

Create a new micro-manager directory in /usr/lib/

{{MessageBox|1=Commandline|2=<pre>

sudo mkdir /usr/lib/micro-manager
</pre>}}

== Building Micro-Manager ==

=== Create the Autotools files ===

<code>configure</code> uses the bundled version of ImageJ:

{{MessageBox|1=Commandline|2=<pre>

cd ~/mm/micro-manager1.4
./mmUnixBuild.sh
./configure --with-imagej=/usr/local/ImageJ
</pre>}}

=== Compile ===

{{MessageBox|1=Commandline|2=<pre>

make
</pre>}}

=== Install ===

{{MessageBox|1=Commandline|2=<pre>

sudo make install
sudo ldconfig
</pre>}}

== Post Install ==

=== Create the startup script ===

Micro-Manager requires the path to <code>/usr/lib/micro-manager</code>. Create the 4 line Bash script below in <code>/usr/local/ImageJ</code> and save it as, say, <code>mmscript</code>.

{{MessageBox|1=File: mmscript|2=<pre>

#!/bin/bash
cd /usr/local/ImageJ
export LD_LIBRARY_PATH=.:/usr/local/lib:/usr/lib/micro-manager:/usr/local/ImageJ
java -mx1200m \
     -Djava.library.path=/usr/lib/micro-manager:/usr/local/ImageJ \
     -Dplugins.dir=/usr/local/ImageJ \
     -cp /usr/local/ImageJ/ij.jar:usr/local/jdk1.5.0_04/lib/tools.jar \
      ij.ImageJ
</pre>}}

Make the script executable:

{{MessageBox|1=Commandline|2=<pre>

sudo chmod +x mmscript
</pre>}}

== Running Micro-Manager ==

Start ImageJ with your new script:

{{MessageBox|1=Commandline|2=<pre>

./mmscript &
</pre>}}

Run <code>Plugins > Micro-Manager > Micro-Manager Studio</code>

== Appendix ==

=== Dependencies ===

{| class="wikitable"
|+ You need the following packages:
! Name || Equivalent Synaptic package name
|-
|colspan="2"  style="background: #ddd; border-top: 1px solid gray; padding: 5px; text-align: center"| Required Dependencies:
|-
| Subversion || <code>subversion</code>
|-
| GNU C++ || <code>build-essential</code>
|-
| GNU Autotools || <code>automake</code>
|-
| GNU Libtool || <code>libtool</code>
|-
| Boost libraries || <code>libboost-all-dev</code>
|-
| zlib compression library || <code>zlib1g-dev</code>
|-
| Simplified Wrapper and Interface Library || <code>swig</code>
|-
| Sun Java SDK || <code>sun-java6-sdk</code>
|-
|colspan="2"  style="background: #ddd; border-top: 1px solid gray; padding: 5px; text-align: center"| Optional Dependencies:
|-
| Firewire Camera Library || <code>libdc1394-*-dev</code>
|-
| Open Source Computer Vision Library || (FIXME)
|}

{{Programming_Sidebar}}
