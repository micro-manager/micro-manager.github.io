= Preparation =

== Install JDK ==

If you are building the Micro-Manager Java GUI, Java 1.6 or 1.7 is recommended[http://imagej.1557.x6.nabble.com/Java-error-when-compiling-a-plugin-tp5004378p5004386.html]. The simplest way is to use OpenJDK:

{{MessageBox|1=Commandline|2=<pre>

sudo apt-get install openjdk-6-jdk
</pre>}}

(You can also use <code>openjdk-7-jdk</code>.)

== Install ImageJ ==

[http://rsb.info.nih.gov/ij/download.html Download the Linux version of ImageJ] from the NIH website.  From a terminal, unzip to <code>/usr/local/</code>, and remove the embedded JRE, as we already have one installed.

{{MessageBox|1=Commandline|2=<pre>

cd ~/Downloads/
sudo unzip ij*-linux*.zip -d /usr/local/
sudo rm -rf /usr/local/ImageJ/jre
sudo chmod a+Xr /usr/local/ImageJ
</pre>}}

== Install Build Programs and Libraries ==

You will need a subversion client to checkout the source code, several libraries, and build tools.  Install them with:

{{MessageBox|1=Commandline|2=<pre>

sudo apt-get install subversion build-essential autoconf automake libtool \
                     libboost-all-dev zlib1g-dev swig
</pre>}}

You may also need to install additional packages (for cameras and special hardware).  See the full list in [[#Dependencies]]

== Fetch Source Repositories ==

Create a directory for the the subversion repositories, such as <code>~/mm</code>.  Besides the source tree, additional binary dependencies are stored in the <code>3rdpartypublic</code> repository.  The build scripts in the source tree assume <code>3rdpartypublic</code> is in the same parent folder level:

{{MessageBox|1=Commandline|2=<pre>

mkdir ~/mm
cd ~/mm
svn co https://valelab.ucsf.edu/svn/micromanager2/trunk/ micro-manager1.4
svn co https://valelab.ucsf.edu/svn/3rdpartypublic/
</pre>}}

This creates 2 new folders in the <code>mm</code> directory:
<pre>
    ~/mm/micro-manager1.4
    ~/mm/3rdpartypublic
</pre>

= Building Micro-Manager =

== Create the Autotools files ==

{{MessageBox|1=Commandline|2=<pre>

cd ~/mm/micro-manager1.4
./autogen.sh
./configure --enable-imagej-plugin=/usr/local/ImageJ
</pre>}}

== Compile ==

{{MessageBox|1=Commandline|2=<pre>

make
</pre>}}

== Install ==

{{MessageBox|1=Commandline|2=<pre>

sudo make install-ijplugin
</pre>}}

{{Note|If you have run <code>./configure</code> without <code>--enable-imagej-plugin</code>, you will be running <code>sudo make install</code> instead. See the build documentation for details.}}

= Post Install =

== Create the startup script ==

Micro-Manager requires the path to <code>/usr/local/lib/micro-manager</code>. Create the 4 line Bash script below in <code>/usr/local/ImageJ</code> and save it as, say, <code>/usr/local/bin/mmscript</code>.

{{MessageBox|1=File: mmscript|2=<pre>

#!/bin/bash
cd /usr/local/ImageJ
java -Xmx1439m -Xincgc -XX:PermSize=128m \
     -Dpython.cachedir.skip=true -Dplugins.dir=/usr/local/ImageJ \
     -Dsun.java.command=ImageJ -Djava.class.path=/usr/local/ImageJ/ij.jar \
     -Dimagej.dir=/usr/local/ImageJ -Dij.dir=/usr/local/ImageJ \
     -Dij.executable=/usr/local/ImageJ/ImageJ \
     -Djava.library.path=/usr/share/java:/usr/local/lib/micro-manager \
      ij.ImageJ -eval 'run("Micro-Manager Studio");'
</pre>}}

Make the script executable:

{{MessageBox|1=Commandline|2=<pre>

sudo chmod +x mmscript
</pre>}}

= Running Micro-Manager =

Start Micro-Manager  with your new script:

{{MessageBox|1=Commandline|2=<pre>

./mmscript &
</pre>}}

= Appendix =

== Dependencies ==

{| class="wikitable"
|+ You need the following packages:
! Name || Equivalent Synaptic package name
|-
|colspan="2"  style="background: #ddd; border-top: 1px solid gray; padding: 5px; text-align: center"| Required Dependencies:
|-
| Subversion || <code>subversion</code>
|-
| GNU C++ || <code>build-essential</code>
|-
| GNU Autotools || <code>automake</code>
|-
| GNU Libtool || <code>libtool</code>
|-
| Boost libraries || <code>libboost-all-dev</code>
|-
| zlib compression library || <code>zlib1g-dev</code>
|-
| Simplified Wrapper and Interface Library || <code>swig</code>
|-
| Sun Java SDK || N/A - manually fetch from Oracle website
|-
|colspan="2"  style="background: #ddd; border-top: 1px solid gray; padding: 5px; text-align: center"| Optional Dependencies:
|-
| Firewire Camera Library || <code>libdc1394-*-dev</code>
|-
| Open Source Computer Vision Library || <code>libopencv-dev</code>
|-
| Andor SDK 2/3 || N/A - request from Andor website
|}

{{Programming_Sidebar}}
