TODO list for 2.0.

==== Data API ====

* Implement data processing pipeline.
* Rename "fileName" attribute of SummaryMetadata? We store entire directories of data, not individual files. It's also used for naming display windows.

==== Images and windows ====

* Add getCoordsFromTaggedImage to extract Coords object from JSONObject?
* On shutdown, attempt to close all windows; cancel shutdown if user cancels window close (see TODO in MMStudio.closeSequence())

==== Acquisitions ====
* Remove MMAcquisition objects

==== Documentation ====

* org.micromanager.MultistagePosition (missing parameter descriptions)
* org.micromanager.PropertyMap (missing parameter descriptions and description of returned variables, also should have an example of the builder concept in the header)
* org.micromanager.data.DataManager (missing variable and return descriptions, superfluous imports)
* org.micromanager.data.Image (missing variable and return descriptions, unused import)
* org.micromanager.data.Metadata (missing variable and return descriptions, formatting of Javadoc)
* org.micromanager.data.Storage (unused import, missing return and variable descriptions)
* org.micromanager.data.SummaryMetadata (missing javadoc to builder)

* org.micromanager.display.DisplayManager (missing return and variable description)
* org.micromanager.display.DisplaySettings (missing return and variable description, unused import)
* org.micromanager.display.DisplayWindow (missing return and variable description)
* org.micromanager.display.NewImagePlusEvent (missing Javadoc)
* org.micromanager.display.NewDisplaySettingsEvent (missing Javadoc)
* org.micromanager.disply.OverlayPanel(missing parameter description)
* org.micromanager.display.RequestToCloseEvent (missing Javadoc)
* org.micromanager.display.RequestToDrawEvent (missing Javadoc)

==== ScriptInterface ====

* Split up "compat" layer into sub-categories, and move those new sub-categories into new objects
** Stage control (+position list dialog)
** Logging (needs to be made new object)
** Acquisitions
** General scripting (sleep, message, clearMessageWindow, more?)
** GUI (refreshGUI, snapSingleImage, more?)
** Hardware config
** Config groups
** ...
* Add ability to run scripts to API

==== General API ====

* Expose classes/interfaces in the API:
** MMFrame and MMDialog
** MMScriptException
** Various utilities (NumberUtils, JavaUtils, others?)
*** These should be exposed as new top-level "manager" types (e.g. "mm.numbers().foo()" instead of "NumberUtils.foo()")
* Write up high-level documentation of all events and what buses they get published on (and what API functions subscribe you to those events).

==== Viewer window ====

* Move zoom buttons to primary display (out of Settings tab)
* Move histograms below image display? Make visible by default?
* NewDisplayEvent is fired before there is a display (or at least, when this even is fired for a Snap/Live Window, gui_.getSnapLiveWin() returns null)
* When recreating Snap/Live window (e.g. due to changed binning), window state is not preserved (re: open tabs)
* Set up multicam, start live, stop live, change camera colors, change binning, restart live -> colors not kept in new window
* Link buttons aren't showing up
* Use an eye icon instead of checkmark for toggling channel display on/off
* Window still sometimes "shakes"

* Feedback on the display window redesign from Walter and Yuxiao:
** No opinion on extra controls besides zoom buttons
** Often open data back at their desks in Micro-Manager (not Fiji/ImageJ), or at home, so laptop-friendly setups are appreciated
** Easier to compare multiple channels if they are vertically aligned, but not a huge deal because of the numbers
** Would be nice to be able to customize the vertical scale of the histogram. Too big by default means that e.g. four-channel displays can't show all histograms simultaneously.
** Important to be able to see all histograms simultaneously
** Put divider box around each histogram panel to visually group things by channel
** Speak to Marvin; he'll have lots of opinions
* Adam likes having wider windows rather than taller ones, because displays are widescreen these days so vertical space is at a premium (doesn't want the window to be going off the bottom of the screen)
** Agrees histograms should be shown automatically; would be fine with simply opening the Contrast tab automatically every time a new display window opens
** Always uses Micro-Manager, not Fiji, when examining data after collection
** Prefers the current 2.0 implementation over the mockup just because histograms are stacked and on the side (and prefers right side over left side)

==== Miscellaneous ====

* Update useful existing scripts to new API
* Replace MMException/MMScriptException with more descriptive (and non-custom) exceptions
* Scan through entire codebase for TODO tags and fix them if appropriate

==== Testing ====
* Be sure to test non-square images from time to time
* Leave a Live display open for a few hours and see if the display "breaks".
* Check for memory leaks
