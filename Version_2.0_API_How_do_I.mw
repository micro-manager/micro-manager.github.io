This page covers how to accomplish many common tasks with the Micro-Manager 2.0 API. It is intended to be a migration assistant for people familiar with the 1.4 API, and a getting-started guide for those who have never written Micro-Manager control code before.

In the below examples, reference will be made to an <code>mm</code> object. This is the Studio interface for Micro-Manager's java layer. It's available as "mm" by default in the Scripting Panel of Micro-Manager, hence the name.

This page makes use of many objects that are more fully described in the [https://micro-manager.org/wiki/Version_2.0_API main 2.0 API documentation].

How do I...

=== Snap an image? ===

If you just want to snap an image and have it pop up in the viewer, then you want to access the <code>SnapLiveManager</code> object:

 List<Image> images = mm.live().snap(true);

The boolean value passed in will tell the SnapLiveManager that you want to see the images that were snapped; the returned List of Image objects is the images acquired. There will only be multiple images if you're using a multi-camera setup.

=== Display an image? ===

If you have an Image object and you want to create a new display window and display it, you can use the <code>DisplayManager</code> object:

 Datastore store = mm.displays().show(image);

This will create a new Datastore and DisplayWindow, add the image to the Datastore, and return it. You can then add new images to the Datastore (using <code>Datastore.putImage(image)</code>) and they will also be displayed in the window.

=== Control live mode? ===

As above, you want the <code>SnapLiveManager</code> object. You can ask if live mode is on or off using:

 boolean isOn = mm.live().getIsLiveModeOn();

And you can turn live mode on or off with:

 mm.live().setLiveMode(isOn);

For example, <code>mm.live().setLiveMode(false)</code> would turn live mode off, regardless of whether or not it was currently on.

If you need to temporarily halt live mode to perform some action (for example, changing the ROI of a camera that can't change ROIs mid-acquisition), but want to restore live mode to the state it was in after you have performed that action, then you can suspend live mode:

 mm.live().setSuspended(true);
 ...perform some action...
 mm.live().setSuspended(false);

If live mode is on, then it will turn off when you call <code>setSuspended(true)</code>, and it will re-start when you call <code>setSuspended(false)</code>. If live mode was off, then it will remain off.

=== Control the core? ===

The MMCore is the same as it's always been, so methods for setting hardware properties, snapping images, manually running sequences, etc. are unchanged. You can access the core via

 mm.core()

or

 mm.getCMMCore()
