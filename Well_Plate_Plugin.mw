== Description ==

Designed to handle standard SBS well plates from 24, 96, 384 and 1536 wells.

The plugin will calculate the correct coordinates for each well position. You can then iterate through each well, starting at the first well. You may either zero position of the XY stage on the microscope for the center of well A1 to coordinates to {0,0} or you can pass the X and Y offsets.

The plugin will move the stage down or up each column, until the last row, before moving to the next column and reversing direction. The zig-zag path chosen for moving the stage is the fastest path on an Zeiss AxioObserver Z1. 

You can change the starting well, or the ending well to only work on a subregion. 

== Setup ==
big.jar must be installed and imported into the bsh script.
 addClassPath("Big.jar");
 import edu.umassmed.big.SBSPlate;

== Class Functions ==

Most functions expect well positions in X, Y coordinates, where X is the long axis, and Y is the short axis of the well plate. X might have a range from 1 to 48 and Y might have a range from 1 to 32, depending upon plate size. Functions with Position in the name return coordinates in microns relative to well A1 plus an offset. 

;SBSPlate()
:Initializes the plugin and uses 96 as the size of the well plate.

;SBSPlate(int size)
:Initializes the plugin for use with well plate of a set size. Acceptable sizes are 24, 96, 384, and 1536. Assumes Well A1 is at
:coordinates 0,0.

;SBSPlate(int size, double X, double Y)
:This also sets the X and Y stage coordinates of well A1. Only use one initialization SBSPlate();

;void setFirstWell(int x, int y)
:Changes the starting position from {1,1} to {x,y}, assuming 96 well plate. Index is 1 based. X is the long dimension, and Y is the short dimension of the well plate. For example, setFirstWell(1,2) would start at well B1.  

;void setLastWell(int x, int y) 
:Changes the ending position from {12,8} to {x,y}. Index is 1 based. X is the long dimension, and Y is the short dimension of the well plate. For example, setLastWell(10,7) would finish at well G10.

;double[] getWellPosition (int x, int y) 
:Returns the absolute position in microns relative to well A1. Calling X and Y is 1 indexed but returns X and Y 0 indexed position in microns.

;String getWellLabel(int well) 
:Returns the SBS name of the well as a String formatted as letter and number. For example, A01. If you are only using a subregion, then you only need to pass the well number of that subregion, with well 1 being the start of the subregion. The function will calculate the correct SBS label of that subregion based on where that subregion is on the well plate. 

;int getNumberOfWells() 
:Returns the number of wells in the entire plate, or the number of wells in a subregion.

;double[] getNextPosition() 
:Returns the {x,y} coordinates in microns of the next well. If at the last well, it will return the first well's coordinates.

== Example Micro-Manager BSH Script ==

 import edu.umassmed.big.SBSPlate;
 
 gui.closeAllAcquisitions();
 gui.clearMessageWindow();
 
 xystage = mmc.getXYStageDevice();
 
 double[] position = {0,0}; // 0 indexed in microns.
 //
 // Well A1 should be centered with the objective.
 // You can zero your stage, or use the X and Y offsets for well A1
 //
 // This assumes Well A1 is zeroed
 mmc.setXYPosition(xystage,position[0],position[1]);
 mmc.waitForDevice(xystage);
 //
 // This assumes Well A1 has an X and Y offset
 //
 double startX = mmc.getXPosition(xystage);
 double startY = mmc.getYPosition(xystage);
 
 // Pass the well plate type, and optionally pass the X and Y micron offset of well A1
 SBSPlate plate = new SBSPlate(96,startX, startY);
 
 numberOfWells = plate.getNumberOfWells();
 
 // setting first and last well is optional if you want to define a smaller region.
 setFirstWell(1,1); // can't be less than 1, or greater than setLastWell();
 setLastWell (12,8); // X = 12 and Y = 8 is maximum value for 96 well plate and correspond to well H12
 
 for (m = 1; m <= numberOfWells; m++) {
   // code to take an image could be here
 
 
   // move the stage to the next well
   position = plate.getNextPosition(); // 0 indexed in mcrons
   mmc.setXYPosition(xystage,position[0],position[1]);
   mmc.waitForDevice(xystage);
 }
 // return stage to starting position, either to {0,0} or {startX, startY}
 mmc.setXYPosition(xystage,startX,startY);
 mmc.waitForDevice(xystage);


--[[User:Kdb|Karl Bellve, Biomedical Imaging Group, University of Massachusetts]] 20:02, 9 February 2011 (UTC)
