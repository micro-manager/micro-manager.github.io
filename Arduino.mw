== Arduino adapter ==

<table><tr><td>
'''Summary:'''</td><td>Adapter for the [http://www.arduino.cc/ Arduino electronics prototyping platform]</td></tr>
<tr><td>'''Author:'''</td><td>Nico Stuurman</td></tr>
<tr><td>'''License:'''</td><td>LGPL</td></tr> 
<tr><td>'''Platforms:'''</td><td>Linux, Mac, and Windows</td></tr>
<tr><td>'''Example Config File:'''</td><td></td></tr>
<tr><td>'''Since version:'''</td><td>1.3.18</td></tr>
</table>

The [http://www.arduino.cc/ Arduino] is a low cost programmable digital IO board.  It has some digital inputs and digital outputs and can communicate with the computer through a serial interface (that is hidden in a USB connection).  A very nice and simple programming language makes the Arduino very simple to program.  The Micro-Manager interface to the Arduino consists of an Arduino programn (the 'firmware') that you need to upload to the Arduino first.  The current version of the Micro-Manager has facilities to use the Arduino as a shutter, and as a shutter that only opens when a TTL is set high (for instance, when the camera is exposing).  Also, timed sequences of TTL output can be setup.  There are also facilities for programmable analogue out, however, that need connection of a DA chip and requires constructions of a 'daughterboard'.

To install the Arduino Micro-Manager 'firmware', download and install the [http://arduino.cc/en/Main/Software Arduino Software] for your platform.  Establish a connection with your Arduino using the instructions that come with the Arduino software (this includes installing a driver for the USB to serial adapter build into the Arduino.. Then download the [https://valelab.ucsf.edu/svn/micromanager2/branches/micromanager1.3/DeviceAdapters/Arduino/AOTFcontroller.pde firmware source code] and copy into the Arduino editor.  Send to the Arduino, and your Arduino is programmed to work with Micro-Manager.

In Micro-Manager, use the hardware configuration wizard to add the Arduino.  Set the serial port to 57600 baud.    

The Arduino 'Switch' sets the digital output pattern using a single byte.  Bit 1 corresponds to Arduino ouput pin 8, bit 2 corresponds to output pin 9, etc... Bits 7 and 8 are not used.  So, setting the switch to value '5', will set output pins 8 and 10 high and the others low.

--[[User:Nico|Nico]] 02:20, 27 February 2009 (UTC)
